// Code generated by "stringer -type=TokenKind"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[literal-0]
	_ = x[whitespace-1]
	_ = x[eof-2]
	_ = x[invalid-3]
	_ = x[plus-4]
	_ = x[dash-5]
	_ = x[star-6]
	_ = x[slash-7]
	_ = x[not-8]
	_ = x[number-9]
	_ = x[identifier-10]
	_ = x[binaryex-11]
	_ = x[unaryex-12]
	_ = x[paranthesesex-13]
	_ = x[booltrue-14]
	_ = x[boolfalse-15]
	_ = x[dequals-16]
	_ = x[notequals-17]
	_ = x[damp-18]
	_ = x[dpipe-19]
	_ = x[equals-20]
	_ = x[nameex-21]
	_ = x[assignex-22]
	_ = x[openparan-23]
	_ = x[closeparan-24]
}

const _TokenKind_name = "literalwhitespaceeofinvalidplusdashstarslashnotnumberidentifierbinaryexunaryexparanthesesexbooltrueboolfalsedequalsnotequalsdampdpipeequalsnameexassignexopenparancloseparan"

var _TokenKind_index = [...]uint8{0, 7, 17, 20, 27, 31, 35, 39, 44, 47, 53, 63, 71, 78, 91, 99, 108, 115, 124, 128, 133, 139, 145, 153, 162, 172}

func (i TokenKind) String() string {
	if i < 0 || i >= TokenKind(len(_TokenKind_index)-1) {
		return "TokenKind(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenKind_name[_TokenKind_index[i]:_TokenKind_index[i+1]]
}
